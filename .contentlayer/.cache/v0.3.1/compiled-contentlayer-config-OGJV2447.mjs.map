{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["// import { defineDocumentType, makeSource } from 'contentlayer/source-files'\n// import remarkGfm from 'remark-gfm'\n// import rehypePrettyCode from 'rehype-pretty-code'\n// import moonlight from './src/assets/moonlight-ii.json'\n//\n// export const Post = defineDocumentType(() => ({\n//   name: 'Post',\n//   filePathPattern: `**/posts/*.mdx`,\n//   contentType: 'mdx',\n//   fields: {\n//     title: {\n//       type: 'string',\n//       description: 'The title of the post',\n//       required: true,\n//     },\n//     publishedAt: {\n//       type: 'date',\n//       description: 'The date of the post',\n//       required: true,\n//     },\n//   },\n//   computedFields: {\n//     url: {\n//       type: 'string',\n//       resolve: (post) => {\n//         return `/blog/${(post._raw.flattenedPath)}`\n//       },\n//     },\n//   },\n// }))\n//\n// export const Project = defineDocumentType(() => ({\n//   name: 'Project',\n//   filePathPattern: `**/projects/*.mdx`,\n//   contentType: 'mdx',\n//   fields: {\n//     title: {\n//       type: 'string',\n//       description: 'The title of the post',\n//       required: true,\n//     },\n//   },\n//   computedFields: {\n//     url: {\n//       type: 'string',\n//       resolve: (project) => `/${project._raw.flattenedPath}`,\n//     },\n//   },\n// }))\n//\n//\n// const options = {\n//   theme: moonlight,\n//   onVisitHighlightedLine(node) {\n//     node.properties.className.push('line--highlighted')\n//   },\n// }\n\nimport { makeSource, defineDatabase } from 'contentlayer-source-notion'\nimport { Client } from '@notionhq/client'\n\nconsole.log(process.env.NOTION_PROJECTS_DB)\n\nconst client = new Client({ auth: 'secret_nIBpsNYaEczRK320SiecG1l6VGFJ3xi8EuF9Fmclo4Q' })\n\nexport const Post = defineDatabase(() => ({\n  name: 'Post',\n  databaseId: 'ccd8578a498849d3b17cf4a36f9f3b54',\n  query: {\n    filter: {\n      property: 'Status',\n      status: {\n        equals: 'Published',\n      },\n    },\n  },\n  properties: {\n    date: {\n      name: 'Date',\n    },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: (post) => `/posts/${post._id}`,\n    },\n  },\n}))\n\nexport default makeSource({\n  client,\n  databaseTypes: [Post],\n})\n\n// export default makeSource({\n//   contentDirPath: 'src/content',\n//   documentTypes: [Post, Project],\n//   mdx: {\n//     remarkPlugins: [remarkGfm],\n//     rehypePlugins: [\n//       [\n//         rehypePrettyCode, options\n//       ],\n//     ],\n//   },\n//\n// })\n"],
  "mappings": ";AA0DA,SAAS,YAAY,sBAAsB;AAC3C,SAAS,cAAc;AAEvB,QAAQ,IAAI,QAAQ,IAAI,kBAAkB;AAE1C,IAAM,SAAS,IAAI,OAAO,EAAE,MAAM,qDAAqD,CAAC;AAEjF,IAAM,OAAO,eAAe,OAAO;AAAA,EACxC,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,OAAO;AAAA,IACL,QAAQ;AAAA,MACN,UAAU;AAAA,MACV,QAAQ;AAAA,QACN,QAAQ;AAAA,MACV;AAAA,IACF;AAAA,EACF;AAAA,EACA,YAAY;AAAA,IACV,MAAM;AAAA,MACJ,MAAM;AAAA,IACR;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,UAAU,KAAK;AAAA,IACpC;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB;AAAA,EACA,eAAe,CAAC,IAAI;AACtB,CAAC;",
  "names": []
}

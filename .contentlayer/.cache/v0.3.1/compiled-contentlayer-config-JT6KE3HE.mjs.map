{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["// import { defineDocumentType, makeSource } from 'contentlayer/source-files'\n// import remarkGfm from 'remark-gfm'\n// import rehypePrettyCode from 'rehype-pretty-code'\n// import moonlight from './src/assets/moonlight-ii.json'\n//\n// export const Post = defineDocumentType(() => ({\n//   name: 'Post',\n//   filePathPattern: `**/posts/*.mdx`,\n//   contentType: 'mdx',\n//   fields: {\n//     title: {\n//       type: 'string',\n//       description: 'The title of the post',\n//       required: true,\n//     },\n//     publishedAt: {\n//       type: 'date',\n//       description: 'The date of the post',\n//       required: true,\n//     },\n//   },\n//   computedFields: {\n//     url: {\n//       type: 'string',\n//       resolve: (post) => {\n//         return `/blog/${(post._raw.flattenedPath)}`\n//       },\n//     },\n//   },\n// }))\n//\n// export const Project = defineDocumentType(() => ({\n//   name: 'Project',\n//   filePathPattern: `**/projects/*.mdx`,\n//   contentType: 'mdx',\n//   fields: {\n//     title: {\n//       type: 'string',\n//       description: 'The title of the post',\n//       required: true,\n//     },\n//   },\n//   computedFields: {\n//     url: {\n//       type: 'string',\n//       resolve: (project) => `/${project._raw.flattenedPath}`,\n//     },\n//   },\n// }))\n//\n//\n// const options = {\n//   theme: moonlight,\n//   onVisitHighlightedLine(node) {\n//     node.properties.className.push('line--highlighted')\n//   },\n// }\n\nimport { makeSource, defineDatabase } from 'contentlayer-source-notion'\nimport { Client } from '@notionhq/client'\n\nconst client = new Client({ auth: process.env.NOTION_TOKEN })\n\nexport default makeSource({\n  client,\n  databaseTypes: [],\n})\n\n// export default makeSource({\n//   contentDirPath: 'src/content',\n//   documentTypes: [Post, Project],\n//   mdx: {\n//     remarkPlugins: [remarkGfm],\n//     rehypePlugins: [\n//       [\n//         rehypePrettyCode, options\n//       ],\n//     ],\n//   },\n//\n// })\n"],
  "mappings": ";AA0DA,SAAS,YAAY,sBAAsB;AAC3C,SAAS,cAAc;AAEvB,IAAM,SAAS,IAAI,OAAO,EAAE,MAAM,QAAQ,IAAI,aAAa,CAAC;AAE5D,IAAO,8BAAQ,WAAW;AAAA,EACxB;AAAA,EACA,eAAe,CAAC;AAClB,CAAC;",
  "names": []
}
